# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

variables:
- group: azure_build
- group: azure_subscription
- name: appgwname
  value: vmss-appgw
- name: httprulename
  value: http-rule
- name: httprulestagename
  value: http-rule-stage
- name: vmssrgname
  value: vmss-rg
- name: system.debug
  value: false
  
resources:
  pipelines:
  - pipeline: build_artifact
    source: build-filecp-pipeline

stages:
- stage: QA
  jobs:
  - deployment: 'Deploy_to_AQ'
    pool:
     name: 'ilkim'
    environment: 'QA'
    strategy:
     runOnce:
       deploy:
        steps:
        - powershell: "Write-Host BuildID: $(resources.pipeline.build_artifact.runID)"

- stage: Staging
  jobs:
  - deployment: 'Deploy_to_Prod_staging'
    pool:
     name: 'ilkim'
    environment: 'Prod'
    strategy:
     runOnce:
       deploy:
        steps:
        - task: AzureCLI@2
          displayName: 'Azure CLI - Deploy to stage slot'
          inputs:
            azureSubscription: 'MyAzure_Subscription'
            scriptType: ps
            scriptLocation: inlineScript
            inlineScript: |
              $id = (az network application-gateway address-pool show -g $(vmssrgname) --gateway-name $(appgwname) -n slot0 --query "backendIpConfigurations[0].id" -o tsv)
              $m = $id.Split("/")[-1][-1] 

              # update stage slot
              if ($m -eq "0") { $n = "1" } else { $n = "0" }
              az vmss update -g $(vmssrgname) -n "api-prod-vmss-slot$n" --set "virtualMachineProfile.storageProfile.imageReference.id=/subscriptions/$(subscription_id)/resourceGroups/$(rgname)/providers/Microsoft.Compute/images/app$(resources.pipeline.build_artifact.runID)"

- stage: SwapProd
  jobs:
  - deployment: 'Swap_to_Prod'
    pool:
     name: 'ilkim'
    environment: 'Prod'
    strategy:
     runOnce:
       deploy:
        steps:
        - task: AzureCLI@2
          displayName: 'Azure CLI - Deploy to stage slot'
          inputs:
            azureSubscription: 'MyAzure_Subscription'
            scriptType: ps
            scriptLocation: inlineScript
            inlineScript: |
              $slot0 = "/subscriptions/$(subscription_id)/resourceGroups/$(vmssrgname)/providers/Microsoft.Network/applicationGateways/$(appgwname)/backendAddressPools/slot0"
              $slot1 = "/subscriptions/$(subscription_id)/resourceGroups/$(vmssrgname)/providers/Microsoft.Network/applicationGateways/$(appgwname)/backendAddressPools/slot1"
              
              $id = (az network application-gateway address-pool show -g $(vmssrgname) --gateway-name $(appgwname) -n slot0 --query "backendIpConfigurations[0].id" -o tsv)
              $m = $id.Split("/")[-1][-1] # get slot number only
              if ($m -eq "0") { $n = "1" } else { $n = "0" }
              
              az vmss update -g $(vmssrgname) -n "api-prod-vmss-slot$n" --set "virtualMachineProfile.networkProfile.networkInterfaceConfigurations[0].ipConfigurations[0].applicationGatewayBackendAddressPools[0].id=$slot0"
              az vmss update -g $(vmssrgname) -n "api-prod-vmss-slot$m" --set "virtualMachineProfile.networkProfile.networkInterfaceConfigurations[0].ipConfigurations[0].applicationGatewayBackendAddressPools[0].id=$slot1"
